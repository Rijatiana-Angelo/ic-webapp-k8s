#deploy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg-admin
  labels:
    app: pg-admin
    env: prod
  namespace: ic-webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pg-admin
  template:
    metadata:
      labels:
        app: pg-admin
    spec:
      containers:
      - image: dpage/pgadmin4
        name: pg-admin
        env:
        - name: PGADMIN_DEFAULT_EMAIL
          value: pgadmin@pgadmin.com
        - name: PGADMIN_DEFAULT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-admin
              key: PGADMIN_DEFAULT_PASSWORD
        ports:
        - containerPort: 5050
          name: postgres
        volumeMounts:
        - name: pg-admin-server
          mountPath: /pgadmin4/servers.json
          subPath: servers.json
        - name: pg-admin-data
          mountPath: /var/lib/pgadmin
      volumes:
      - name: pg-admin-server
        configMap:
          name: pgadmin-config
          items:
          - key: servers.json
            path: servers.json
      - name: pg-admin-data
        persistentVolumeClaim:
          claimName: pgadmin-pvc

#nodeport
---
apiVersion: v1
kind: Service
metadata:
  name: pg-admin
  labels:
    app: pg-admin
    env: prod
  namespace: ic-webapp
spec:
  type: NodePort
  selector:
    app: pg-admin
  ports:
  - protocol: TCP
    port: 5050
    targetPort: 80
    nodePort: 30050

#configmap
---
apiVersion: v1
data:
  servers.json: |
    {
        "Servers": {
          "1": {
            "Name": "docker_postgres",
            "Group": "docker_postgres_group",
            "Host": "postgres",
            "Port": "5432" ,
            "MaintenanceDB": "postgres",
            "Username": "odoo_user",
            "SSLMode": "prefer"
          }
        }
    }
kind: ConfigMap
metadata:
  name: pgadmin-config
  namespace: ic-webapp
  labels:
    env: prod

#secret
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  name: pg-admin
  namespace: ic-webapp
  labels:
    env: prod
    app: pg-admin
data:
  PGADMIN_DEFAULT_PASSWORD: cGdhZG1pbg==

#pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pgadmin-pv
  labels:
    type: local
    env: prod
  namespace: ic-webapp
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
  - ReadWriteMany
  hostPath:
    path: "/data_k8s/pgadmin4"

#pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgadmin-pvc
  labels:
    app: odoo
    env: prod
  namespace: ic-webapp
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
